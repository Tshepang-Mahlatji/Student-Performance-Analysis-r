knitr::opts_chunk$set(echo = TRUE)
install.packages(c("ggplot2", "tidyverse", "car"))
library(readr)
Student_Performance <- read_csv("Student_Performance.csv")
View(Student_Performance)
data = read.csv("Student_Performance.csv")
head(data)
summary(data)
ggplot(data, aes(x = Extracurricular.Activities, y = Performance.Index, fill = Extracurricular.Activities)) +
geom_boxplot() +
labs(title = "Extracurricular Activities by Student", y = "Perfomance Index") +
scale_fill_manual(values = c("blue", "red")) + ### Adding color to the plot
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("ggplot2", "tidyverse", "car","dplyr"))
library(c("ggplot","car","tidyverse","dplyr"))
install.packages(c("ggplot2", "tidyverse", "car","dplyr"))
library(ggplot2)
library(car)
library(tidyverse)
library(dplyr)
data = read.csv("Student_Performance.csv")
head(data)
summary(data)
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("ggplot2", "tidyverse", "car","dplyr"))
library(ggplot2)
library(car)
library(tidyverse)
library(dplyr)
data = read.csv("Student_Performance.csv")
install.packages(c("ggplot2", "tidyverse", "car", "dplyr"))
ggplot(data, aes(x = Extracurricular.Activities, y = Performance.Index, fill = Extracurricular.Activities)) +
geom_boxplot() +
labs(title = "Extracurricular Activities by Student", y = "Perfomance Index") +
scale_fill_manual(values = c("blue", "red")) + ### Adding color to the plot
theme_minimal()
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
correlation_matrix =cor(X)
Y= data$Performance.Index
X = subset(data,select = -Performance.Index)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
correlation_matrix =cor(X)
library(dplyr, help, pos = 2, lib.loc = NULL)
correlation_long = correlation_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "variable1") %>%
gather(variable2, correlation, -variable1)
library(tidyverse, help, pos = 2, lib.loc = NULL)
correlation_long
ggplot(correlation_long, aes(x = variable1, y = variable2, fill = correlation, label = sprintf("%.5f", correlation))) +
geom_tile(color = "white") +
geom_text(size = 3, color = "black", show.legend = FALSE) +  # Add text labels
scale_fill_gradientn(colors = c("#4575b4", "#91bfdb", "#fee08b", "#d73027"),
limits = c(-1, 1),
guide = "colorbar") +
theme_minimal() +
labs(title = "Correlation Matrix", x = "Variables", y = "Variables") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
set.seed(42)
index <- sample(1:nrow(data), 0.8 * nrow(data))
X_train <- X[index, ]
X_test <- X[-index, ]
Y_train <- Y[index]
Y_test <- Y[-index]
model <- lm(Y_train ~ ., data = X_train)
coefficients <- coef(model)[-1]  # Exclude the intercept
variable_names <- names(coefficients) # Get variable names
coefficients
variable_names
# Display coefficients with variable names
print(paste("Intercept:", coef(model)[1]))
cat("Coefficients:\n")
for (i in seq_along(coefficients)) {
cat(variable_names[i], ":", coefficients[i], "\n")
}
print(paste("Intercept:", coef(model)[1]))
Y_pred <- predict(model, newdata = X_test)
r_squared <- summary(model)$r.squared
cat("R-squared:", round(r_squared, 5), "\n")
summary(model)
mean_residuals = mean(model$residuals, na.rm=FALSE)
sd_residuals = sd(model$residuals)
ggplot(model, aes(x = model$residuals)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black", alpha = 0.9) +
stat_function(fun = dnorm, args = list(mean = mean_residuals, sd = sd_residuals),
color = "red", linewidth = 1.5)+
labs(title = "Histogram of Residuals Overlayed in Normal Distribution", x = "Residuals") +
theme_minimal()+
xlim(range(model$residuals))
sigma = sd(Residuals$model.residuals)
Residuals = data.frame(model$residuals)
mu = mean(Residuals$model.residuals)
sigma = sd(Residuals$model.residuals)
result = ks.test(Residuals$model.residuals, "pnorm", mean = mu, sd = sigma)
cat("Kolmogorov-Smirnov Test Statistic:", result$statistic, "\n")
cat("P-value:", result$p.value, "\n")
alpha <- 0.05
if (result$p.value < alpha) {
cat("Reject the null hypothesis: The residuals are not normally distributed.\n")
} else {
cat("Fail to reject the null hypothesis: The residuals appear to be normally distributed.\n")
}
qqPlot(Residuals$model.residuals)
ggplot(data, aes(x = Extracurricular.Activities, y = Performance.Index, fill = Extracurricular.Activities)) +
geom_boxplot() +
labs(title = "Extracurricular Activities by Student", y = "Perfomance Index") +
scale_fill_manual(values = c("blue", "red")) + ### Adding color to the plot
theme_minimal()
ggplot(data, aes(x = Extracurricular.Activities, y = Performance.Index, fill = Extracurricular.Activities)) +
geom_boxplot() +
labs(title = "Extracurricular Activities by Student", y = "Perfomance Index") +
scale_fill_manual(values = c("blue", "red")) + ### Adding color to the plot
theme_minimal()
install.packages(c("ggplot2", "tidyverse", "car","dplyr"))
library(ggplot2)
library(car)
library(tidyverse)
library(dplyr)
data = read.csv("Student_Performance.csv")
install.packages(c("ggplot2", "tidyverse", "car", "dplyr"))
install.packages(c("ggplot2", "tidyverse", "car","dplyr"))
library(ggplot2)
library(car)
library(tidyverse)
library(dplyr)
data = read.csv("Student_Performance.csv")
head(data)
summary(data)
ggplot(data, aes(x = Extracurricular.Activities, y = Performance.Index, fill = Extracurricular.Activities)) +
geom_boxplot() +
labs(title = "Extracurricular Activities by Student", y = "Perfomance Index") +
scale_fill_manual(values = c("blue", "red")) + ### Adding color to the plot
theme_minimal()
Y = data$Performance.Index
X = subset(data,select = -Performance.Index)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
correlation_matrix = cor(X)
X = subset(data,select = -Performance.Index)
Y = data$Performance.Index
X = subset(data,select = -Performance.Index)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
correlation_matrix = cor(X)
library(dplyr, help, pos = 2, lib.loc = NULL)
correlation_long = correlation_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "variable1") %>%
gather(variable2, correlation, -variable1)
library(tidyverse, help, pos = 2, lib.loc = NULL)
correlation_long
ggplot(correlation_long, aes(x = variable1, y = variable2, fill = correlation, label = sprintf("%.5f", correlation))) +
geom_tile(color = "white") +
geom_text(size = 3, color = "black", show.legend = FALSE) +  # Add text labels
scale_fill_gradientn(colors = c("#4575b4", "#91bfdb", "#fee08b", "#d73027"),
limits = c(-1, 1),
guide = "colorbar") +
theme_minimal() +
labs(title = "Correlation Matrix", x = "Variables", y = "Variables") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
qqPlot(Residuals$model.residuals)
mean_residuals = mean(model$residuals, na.rm=FALSE)
sd_residuals = sd(model$residuals)
ggplot(model, aes(x = model$residuals)) +
geom_histogram(binwidth = 0.5, fill = "lightblue", color = "black", alpha = 0.9) +
stat_function(fun = dnorm, args = list(mean = mean_residuals, sd = sd_residuals),
color = "red", linewidth = 1.5)+
labs(title = "Histogram of Residuals Overlayed in Normal Distribution", x = "Residuals") +
theme_minimal()+
xlim(range(model$residuals))
head(data)
columns(data)
colnames(data)
# Display coefficients with variable names
print(paste("Intercept:", coef(model)[1]))
cat("Coefficients:\n")
for (i in seq_along(coefficients)) {
cat(variable_names[i], ":", coefficients[i], "\n")
}
print(paste("Intercept:", coef(model)[1]))
Y_pred <- predict(model, newdata = X_test)
r_squared <- summary(model)$r.squared
cat("R-squared:", round(r_squared, 5), "\n")
summary(model)
Y = data$Performance.Index
X = subset(data,select = -Performance.Index)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
correlation_matrix = cor(X)
library(dplyr, help, pos = 2, lib.loc = NULL)
correlation_long = correlation_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "variable1") %>%
gather(variable2, correlation, -variable1)
library(tidyverse, help, pos = 2, lib.loc = NULL)
correlation_long
ggplot(correlation_long, aes(x = variable1, y = variable2, fill = correlation, label = sprintf("%.5f", correlation))) +
geom_tile(color = "white") +
geom_text(size = 3, color = "black", show.legend = FALSE) +  # Add text labels
scale_fill_gradientn(colors = c("#4575b4", "#91bfdb", "#fee08b", "#d73027"),
limits = c(-1, 1),
guide = "colorbar") +
theme_minimal() +
labs(title = "Correlation Matrix", x = "Variables", y = "Variables") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
X
Y = data$Performance.Index
X = subset(data,select = -Performance.Index)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
correlation_matrix = cor(X)
library(dplyr, help, pos = 2, lib.loc = NULL)
correlation_long = correlation_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "variable1") %>%
gather(variable2, correlation, -variable1)
library(tidyverse, help, pos = 2, lib.loc = NULL)
correlation_long
ggplot(correlation_long, aes(x = variable1, y = variable2, fill = correlation, label = sprintf("%.5f", correlation))) +
geom_tile(color = "white") +
geom_text(size = 3, color = "black", show.legend = FALSE) +  # Add text labels
scale_fill_gradientn(colors = c("#4575b4", "#91bfdb", "#fee08b", "#d73027"),
limits = c(-1, 1),
guide = "colorbar") +
theme_minimal() +
labs(title = "Correlation Matrix", x = "Variables", y = "Variables") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tinytex::install_tinytex()
Y = data$Performance.Index
X = subset(data,select = -Performance.Index)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
correlation_matrix = cor(X)
correlation_long = correlation_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "variable1") %>%
gather(variable2, correlation, -variable1)
correlation_long
ggplot(correlation_long, aes(x = variable1, y = variable2, fill = correlation, label = sprintf("%.5f", correlation))) +
geom_tile(color = "white") +
geom_text(size = 3, color = "black", show.legend = FALSE) +  # Add text labels
scale_fill_gradientn(colors = c("#4575b4", "#91bfdb", "#fee08b", "#d73027"),
limits = c(-1, 1),
guide = "colorbar") +
theme_minimal() +
labs(title = "Correlation Matrix", x = "Variables", y = "Variables") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Y = data$Performance.Index
X = subset(data,select = -Performance.Index)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
correlation_matrix = cor(X)
correlation_long = correlation_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "variable1") %>%
gather(variable2, correlation, -variable1)
correlation_long
ggplot(correlation_long, aes(x = variable1, y = variable2, fill = correlation, label = sprintf("%.5f", correlation))) +
geom_tile(color = "white") +
geom_text(size = 3, color = "black", show.legend = FALSE) +  # Add text labels
scale_fill_gradientn(colors = c("#4575b4", "#91bfdb", "#fee08b", "#d73027"),
limits = c(-1, 1),
guide = "colorbar") +
theme_minimal() +
labs(title = "Correlation Matrix", x = "Variables", y = "Variables") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Y = data$Performance.Index
X = subset(data,select = -Performance.Index)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
correlation_matrix = cor(X)
correlation_long = correlation_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "variable1") %>%
gather(variable2, correlation, -variable1)
correlation_long
ggplot(correlation_long, aes(x = variable1, y = variable2, fill = correlation, label = sprintf("%.5f", correlation))) +
geom_tile(color = "white") +
geom_text(size = 3, color = "black", show.legend = FALSE) +  # Add text labels
scale_fill_gradientn(colors = c("#4575b4", "#91bfdb", "#fee08b", "#d73027"),
limits = c(-1, 1),
guide = "colorbar") +
theme_minimal() +
labs(title = "Correlation Matrix", x = "Variables", y = "Variables") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
Y = data$Performance.Index
X = subset(data,select = -Performance.Index)
correlation_matrix = cor(X)
correlation_long = correlation_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "variable1") %>%
gather(variable2, correlation, -variable1)
correlation_long
ggplot(correlation_long, aes(x = variable1, y = variable2, fill = correlation, label = sprintf("%.5f", correlation))) +
geom_tile(color = "white") +
geom_text(size = 3, color = "black", show.legend = FALSE) +  # Add text labels
scale_fill_gradientn(colors = c("#4575b4", "#91bfdb", "#fee08b", "#d73027"),
limits = c(-1, 1),
guide = "colorbar") +
theme_minimal() +
labs(title = "Correlation Matrix", x = "Variables", y = "Variables") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data()
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
View(data)
data = read.csv("Student_Performance.csv")
View(data)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
View(data)
data$Extracurricular.Activities = ifelse(data$Extracurricular.Activities == 'Yes', 1, 0)
View(data)
data = read.csv("Student_Performance.csv")
result = ks.test(Residuals$model.residuals, "pnorm", mean = mu, sd = sigma)
cat("Kolmogorov-Smirnov Test Statistic:", result$statistic, "\n")
cat("P-value:", result$p.value, "\n")
alpha <- 0.05
if (result$p.value < alpha) {
cat("Reject the null hypothesis: The residuals are not normally distributed.\n")
} else {
cat("Fail to reject the null hypothesis: The residuals appear to be normally distributed.\n")
}
library(ggplot2)
library(car)
library(tidyverse)
library(dplyr)
data = read.csv("Student_Performance.csv")
data = read.csv("Student_Performance.csv")
